/*
    Example config:
    Sharding json from one queue into two
    postgres databases
*/
consumers = (
 {
    type = "redis";
    threads = 1;
    topic = "json_queue";
    host = "redis-1:6379";
  }
);



queue = {
    postadd = (
/*
    Turn each message into postgres binary copy format
    Put "/token" into metadata jpointer
*/
        {
            type = "jsonexport";
            jpointers = (
                [ "/timestamp", "date" ],
                [ "/token", "text", "store_meta" ],
                "/context"
            );
        },
/*
    Use metadata field jpointer to calculate fnv32a.
    XOR fold result to 1 bit. Set xmark depending on bit.
    (Fall back to xmark 1 if field does not exist)
*/
        {
            type = "xmark";
            field = "jpointer";
            hash = "fnv32a_str";
            fold = "fold1"
            xmark = 1;
        }
    );
};

/*
    Insert into postgres, matching xmark 0/1.
*/
producers = (
  {
    xmark = 0;
    threads = 1;
    type = "postgres";
    host = "postgres-1:5432";
    dbname = "exports";
    topic = "";
    format = "binary";
  },
  {
    xmark = 1;
    threads = 1;
    type = "postgres";
    host = "postgres-2:5432";
    dbname = "exports";
    topic = "";
    format = "binary";
  },
);


logger :
{
  file = "/tmp/output.log";
  type = "file";
};
