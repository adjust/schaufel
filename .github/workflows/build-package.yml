---
name: Build install package

on:
  release:
    types:
      - published

  workflow_dispatch:

defaults:
  run:
    shell: bash

env:
  LC_ALL: C.UTF-8

jobs:
  build-deb-gcc:
    name: Build (${{ matrix.os }}, ${{ matrix.cc }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-22.04
          - ubuntu-24.04
        cc:
          - gcc
          # # Disable Clang (enable required: matrix.include.cc: clang)
          # - clang
        include:
          - cc: gcc
            LDFLAGS: ""
            CFLAGS: "-O2"
          # # Disable Clang (enable required: matrix.cc.clang)
          # - cc: clang
          #   # # Disable ASan, incompatible w/ Valgrind test
          #   # # https://github.com/google/sanitizers/issues/856#issuecomment-924966052
          #   # LDFLAGS: '-fsanitize=address -fno-omit-frame-pointer'
          #   # CFLAGS: '-Og -fsanitize=address -fno-omit-frame-pointer'
          #   LDFLAGS: ''
          #   CFLAGS: '-O2'
    env:
      CC: ${{ matrix.cc }}
      LDFLAGS: ${{ matrix.LDFLAGS }}
      CFLAGS: ${{ matrix.CFLAGS }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Fetch update package information
        run: sudo apt-get update --assume-yes

      - name: Install build-essential and tools
        run: sudo apt-get install --assume-yes build-essential debhelper dpkg-dev valgrind clang

      - name: Install package dependencies
        run: sudo apt-get install --assume-yes libconfig-dev libconfig++-dev libhiredis-dev libjson-c-dev libpq-dev librdkafka-dev

      - name: Run testsuite
        run: make test

      - name: Compile and build bianry
        run: make

      - name: Build package
        run: make package-deb

      - name: Upload package(s)
        uses: actions/upload-artifact@v4
        with:
          name: Packages-${{ matrix.os }}
          path: |
            schaufel_*.buildinfo
            schaufel_*.changes
            schaufel_*.deb
  release:
    needs: build-deb-gcc
    name: Debian-Package (${{ matrix.os }}, ${{ matrix.cc }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-22.04
          - ubuntu-24.04
        cc:
          - gcc
          # # Disable Clang (enable required: matrix.include.cc: clang)
          # - clang
    env:
      CC: ${{ matrix.cc }}
      LDFLAGS: ${{ matrix.LDFLAGS }}
      CFLAGS: ${{ matrix.CFLAGS }}
    permissions:
      contents: write
      packages: write
      actions: read
    steps:
      - name: Download Debian package
        uses: actions/download-artifact@v4
        with:
          name: Packages-${{ matrix.os }}

      - name: Release package(s)
        uses: softprops/action-gh-release@v2
        with:
          files: |
            schaufel_*.buildinfo
            schaufel_*.changes
            schaufel_*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
