include Makefile.global

LIBS=@LIBS@

CPPFLAGS = -Isrc/include
LDFLAGS += -Wl,-E

OBJDIR = obj
OUT = bin/schaufel

SOURCES = $(wildcard src/*.c) $(wildcard src/utils/*.c)
TEST_SOURCES = $(wildcard t/*.c)

OBJ = $(patsubst src/%.c, $(OBJDIR)/%.o, $(SOURCES))
OBJ_TEST = $(patsubst $(OBJDIR)/main.o, ,$(OBJ))
OBJ_BIN_TEST = $(patsubst t/%.c, $(OBJDIR)/%.o, $(TEST_SOURCES))

DOCS = $(patsubst man/%, doc/%.pdf , $(wildcard man/*))

all: release

contrib:
	$(MAKE) -C contrib

docs: $(DOCS)

doc/%.pdf: man/*
	groff -mandoc -f H -T ps $^ | ps2pdf - $@

release: before_release src/include/paths.h $(OBJ) out_release

test: clean_release before_release $(OBJ_TEST) $(OBJ_BIN_TEST)

before_release:
	mkdir -p obj/utils bin

clean: clean_release clean_paths

clean_release:
	rm -f $(OBJ) $(OUT)
	rm -rf bin
	rm -rf $(OBJDIR)
	rm -rf doc/*.pdf

clean_paths:
	rm -f src/include/paths.h

out_release: $(OBJ)
	$(LD) $(LIBDIR) $(LDFLAGS) $(OBJ) $(LIBS) -o $(OUT)

$(OBJDIR)/%.o: src/%.c 
	$(CC) $(CPPFLAGS) $(CFLAGS) $(CPPFLAGS) -c $< -o $@

$(OBJDIR)/%.o: t/%.c
	$(CC) $(CPPFLAGS) $(CFLAGS) -c $< -o $@
	$(LD) $(LIBDIR) $(OBJ_TEST) $@ $(LIBS) -o bin/$(subst .o, ,$(notdir $@))
	valgrind -q --leak-check=full bin/$(subst .o, ,$(notdir $@))

install: all
	$(INSTALL) bin/schaufel $(DESTDIR)$(bindir)/schaufel
	cp -r src/include/ $(DESTDIR)$(includedir)
	$(INSTALL) -m 0644 contrib.mk $(DESTDIR)$(contribdir)/contrib.mk
	$(INSTALL) -m 0644 Makefile.global $(DESTDIR)$(contribdir)/Makefile.global
	$(INSTALL) -m 0644 -t $(DESTDIR)$(docdir) doc/*
	$(INSTALL) -m 0644 man/schaufel.1 $(DESTDIR)$(man1dir)/schaufel.1
	$(INSTALL) -m 0644 man/schaufel.conf.5 $(DESTDIR)$(man5dir)/schaufel.conf.5

src/include/paths.h:
	echo "#define INCLUDEDIR \"$(includedir)\"" >$@
	echo "#define CONTRIBDIR \"$(contribdir)\"" >>$@

.PHONY: all contrib docs release test clean
